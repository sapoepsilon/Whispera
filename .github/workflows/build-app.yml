name: Build App

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]
  workflow_dispatch:

env:
  APP_NAME: "Whispera"
  SCHEME_NAME: "Whispera"

jobs:
  build-app:
    runs-on: macos-14

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Cache Swift Package Manager
        uses: actions/cache@v4
        with:
          path: |
            .build
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Resolve Swift Package Dependencies
        run: |
          xcodebuild -resolvePackageDependencies -project "${APP_NAME}.xcodeproj" -scheme "${SCHEME_NAME}"

      - name: Build app (unsigned for CI validation)
        run: |
          echo "üî® Building Whispera app..."
          
          # Build using scheme (includes test targets but they won't be run)
          # Using destination platform to avoid C compilation issues
          xcodebuild build \
                     -project "${APP_NAME}.xcodeproj" \
                     -scheme "${SCHEME_NAME}" \
                     -configuration Debug \
                     -destination "platform=macOS,arch=arm64" \
                     CODE_SIGN_IDENTITY="-" \
                     CODE_SIGNING_REQUIRED=NO
          
          # Check if the main app binary was created
          if [ -d "/Users/runner/Library/Developer/Xcode/DerivedData/${APP_NAME}-"*/Build/Products/Debug/"${APP_NAME}.app" ]; then
            echo "‚úÖ Main app built successfully"
            ls -la /Users/runner/Library/Developer/Xcode/DerivedData/${APP_NAME}-*/Build/Products/Debug/"${APP_NAME}.app"
          else
            echo "‚ùå Build failed - app bundle not found"
            exit 1
          fi

      - name: Check for SwiftUI deprecations
        run: |
          # Look for deprecated SwiftUI APIs
          if grep -r "\.navigationBarTitle\|\.navigationBarItems" --include="*.swift" . ; then
            echo "‚ö†Ô∏è Found deprecated SwiftUI APIs"
          fi

      - name: Analyze code size
        run: |
          # Basic code metrics
          echo "üìä Code Statistics:"
          find . -name "*.swift" -not -path "./build/*" -not -path "./DerivedData/*" | wc -l | xargs echo "Swift files:"
          find . -name "*.swift" -not -path "./build/*" -not -path "./DerivedData/*" -exec wc -l {} + | tail -1 | xargs echo "Total lines:"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            build/DerivedData/Logs/Test/
            build/
          retention-days: 3
